@model LoginModel;
@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Login Page";
}
<h1>@ViewData["Title"] </h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TenantSecret" class="control-label">(this is your user name and password)</label>
                <input asp-for="TenantSecret" class="form-control" id="step001" /> <p class="text-danger"> << -- Please Save this Key future, this is your individual identification on the system!!! </p>
                <p class="text-danger">
                    Next time you can access your informations by accessing:<a id="step002"  href="@(HttpContextAccessor.HttpContext.Request.Scheme+"://"+HttpContextAccessor.HttpContext.Request.Host)?TenantSecret=@Model.TenantSecret"> @(HttpContextAccessor.HttpContext.Request.Host)?TenantSecret=@Model.TenantSecret</a>
                </p>
                <span asp-validation-for="TenantSecret" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary"  id="step003"/>
            </div>
        </form>
    </div>
</div>


<script defer>var tour = introJs().setOptions({
        steps: [
            { intro: "Welcome to CoopTracker app! Next will follow a tour on this page!" },
            { element: '#step001', intro: "This application uses a unic key to do authentication, there is your login and your password, keep it privaty. So keep this kay save! This key can be customized!" },
        { element: '#step002', intro: "You can access this system using this URL with your own Tenant Secrete, keep it safe!" },
        { element: '#step003', intro: "Once you are done, click on login!" },
        ]
    });
    tour.onexit(() => {
        document.cookie = "tour_login=true";
    })
    tour.oncomplete(() => {
        document.cookie = "tour_login=true";
    })
    tour.onskip(() => {
        document.cookie = "tour_login=true";
    })
    if (document.cookie.indexOf("tour_login=true") < 0)
        tour.start();</script>